// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jayanthvn/pure-gobpf/pkg/ebpf_maps (interfaces: APIs)

// Package mock_ebpf_maps is a generated GoMock package.
package mock_ebpf_maps

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ebpf_maps "github.com/jayanthvn/pure-gobpf/pkg/ebpf_maps"
)

// MockAPIs is a mock of APIs interface.
type MockAPIs struct {
	ctrl     *gomock.Controller
	recorder *MockAPIsMockRecorder
}

// MockAPIsMockRecorder is the mock recorder for MockAPIs.
type MockAPIsMockRecorder struct {
	mock *MockAPIs
}

// NewMockAPIs creates a new mock instance.
func NewMockAPIs(ctrl *gomock.Controller) *MockAPIs {
	mock := &MockAPIs{ctrl: ctrl}
	mock.recorder = &MockAPIsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIs) EXPECT() *MockAPIsMockRecorder {
	return m.recorder
}

// CreateMap mocks base method.
func (m *MockAPIs) CreateMap(arg0 ebpf_maps.BpfMapData) (ebpf_maps.BPFMap, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMap", arg0)
	ret0, _ := ret[0].(ebpf_maps.BPFMap)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMap indicates an expected call of CreateMap.
func (mr *MockAPIsMockRecorder) CreateMap(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMap", reflect.TypeOf((*MockAPIs)(nil).CreateMap), arg0)
}

// CreateMapEntry mocks base method.
func (m *MockAPIs) CreateMapEntry(arg0, arg1 uintptr, arg2 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMapEntry", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMapEntry indicates an expected call of CreateMapEntry.
func (mr *MockAPIsMockRecorder) CreateMapEntry(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMapEntry", reflect.TypeOf((*MockAPIs)(nil).CreateMapEntry), arg0, arg1, arg2)
}

// CreateUpdateMap mocks base method.
func (m *MockAPIs) CreateUpdateMap(arg0, arg1 uintptr, arg2 uint64, arg3 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUpdateMap", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUpdateMap indicates an expected call of CreateUpdateMap.
func (mr *MockAPIsMockRecorder) CreateUpdateMap(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUpdateMap", reflect.TypeOf((*MockAPIs)(nil).CreateUpdateMap), arg0, arg1, arg2, arg3)
}

// DeleteMapEntry mocks base method.
func (m *MockAPIs) DeleteMapEntry(arg0 uintptr, arg1 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMapEntry", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMapEntry indicates an expected call of DeleteMapEntry.
func (mr *MockAPIsMockRecorder) DeleteMapEntry(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMapEntry", reflect.TypeOf((*MockAPIs)(nil).DeleteMapEntry), arg0, arg1)
}

// GetFirstMapEntry mocks base method.
func (m *MockAPIs) GetFirstMapEntry(arg0 uintptr, arg1 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFirstMapEntry", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetFirstMapEntry indicates an expected call of GetFirstMapEntry.
func (mr *MockAPIsMockRecorder) GetFirstMapEntry(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFirstMapEntry", reflect.TypeOf((*MockAPIs)(nil).GetFirstMapEntry), arg0, arg1)
}

// GetMapEntry mocks base method.
func (m *MockAPIs) GetMapEntry(arg0, arg1 uintptr, arg2 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMapEntry", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetMapEntry indicates an expected call of GetMapEntry.
func (mr *MockAPIsMockRecorder) GetMapEntry(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMapEntry", reflect.TypeOf((*MockAPIs)(nil).GetMapEntry), arg0, arg1, arg2)
}

// GetNextMapEntry mocks base method.
func (m *MockAPIs) GetNextMapEntry(arg0, arg1 uintptr, arg2 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNextMapEntry", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetNextMapEntry indicates an expected call of GetNextMapEntry.
func (mr *MockAPIsMockRecorder) GetNextMapEntry(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNextMapEntry", reflect.TypeOf((*MockAPIs)(nil).GetNextMapEntry), arg0, arg1, arg2)
}

// PinMap mocks base method.
func (m *MockAPIs) PinMap(arg0 ebpf_maps.BPFMap, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PinMap", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PinMap indicates an expected call of PinMap.
func (mr *MockAPIsMockRecorder) PinMap(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PinMap", reflect.TypeOf((*MockAPIs)(nil).PinMap), arg0, arg1)
}

// UpdateMapEntry mocks base method.
func (m *MockAPIs) UpdateMapEntry(arg0, arg1 uintptr, arg2 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMapEntry", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMapEntry indicates an expected call of UpdateMapEntry.
func (mr *MockAPIsMockRecorder) UpdateMapEntry(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMapEntry", reflect.TypeOf((*MockAPIs)(nil).UpdateMapEntry), arg0, arg1, arg2)
}
