// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jayanthvn/pure-gobpf/pkg/ebpf_maps (interfaces: BpfMapAPIs)

// Package mock_ebpf_maps is a generated GoMock package.
package mock_ebpf_maps

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ebpf_maps "github.com/jayanthvn/pure-gobpf/pkg/ebpf_maps"
)

// MockBpfMapAPIs is a mock of BpfMapAPIs interface.
type MockBpfMapAPIs struct {
	ctrl     *gomock.Controller
	recorder *MockBpfMapAPIsMockRecorder
}

// MockBpfMapAPIsMockRecorder is the mock recorder for MockBpfMapAPIs.
type MockBpfMapAPIsMockRecorder struct {
	mock *MockBpfMapAPIs
}

// NewMockBpfMapAPIs creates a new mock instance.
func NewMockBpfMapAPIs(ctrl *gomock.Controller) *MockBpfMapAPIs {
	mock := &MockBpfMapAPIs{ctrl: ctrl}
	mock.recorder = &MockBpfMapAPIsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBpfMapAPIs) EXPECT() *MockBpfMapAPIsMockRecorder {
	return m.recorder
}

// CreateMap mocks base method.
func (m *MockBpfMapAPIs) CreateMap(arg0 ebpf_maps.BpfMapData) (ebpf_maps.BPFMap, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMap", arg0)
	ret0, _ := ret[0].(ebpf_maps.BPFMap)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMap indicates an expected call of CreateMap.
func (mr *MockBpfMapAPIsMockRecorder) CreateMap(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMap", reflect.TypeOf((*MockBpfMapAPIs)(nil).CreateMap), arg0)
}

// CreateMapEntry mocks base method.
func (m *MockBpfMapAPIs) CreateMapEntry(arg0, arg1 uintptr, arg2 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMapEntry", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMapEntry indicates an expected call of CreateMapEntry.
func (mr *MockBpfMapAPIsMockRecorder) CreateMapEntry(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMapEntry", reflect.TypeOf((*MockBpfMapAPIs)(nil).CreateMapEntry), arg0, arg1, arg2)
}

// CreateUpdateMap mocks base method.
func (m *MockBpfMapAPIs) CreateUpdateMap(arg0, arg1 uintptr, arg2 uint64, arg3 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUpdateMap", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUpdateMap indicates an expected call of CreateUpdateMap.
func (mr *MockBpfMapAPIsMockRecorder) CreateUpdateMap(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUpdateMap", reflect.TypeOf((*MockBpfMapAPIs)(nil).CreateUpdateMap), arg0, arg1, arg2, arg3)
}

// DeleteMapEntry mocks base method.
func (m *MockBpfMapAPIs) DeleteMapEntry(arg0 uintptr, arg1 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMapEntry", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMapEntry indicates an expected call of DeleteMapEntry.
func (mr *MockBpfMapAPIsMockRecorder) DeleteMapEntry(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMapEntry", reflect.TypeOf((*MockBpfMapAPIs)(nil).DeleteMapEntry), arg0, arg1)
}

// GetFirstMapEntry mocks base method.
func (m *MockBpfMapAPIs) GetFirstMapEntry(arg0 uintptr, arg1 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFirstMapEntry", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetFirstMapEntry indicates an expected call of GetFirstMapEntry.
func (mr *MockBpfMapAPIsMockRecorder) GetFirstMapEntry(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFirstMapEntry", reflect.TypeOf((*MockBpfMapAPIs)(nil).GetFirstMapEntry), arg0, arg1)
}

// GetMapEntry mocks base method.
func (m *MockBpfMapAPIs) GetMapEntry(arg0, arg1 uintptr, arg2 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMapEntry", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetMapEntry indicates an expected call of GetMapEntry.
func (mr *MockBpfMapAPIsMockRecorder) GetMapEntry(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMapEntry", reflect.TypeOf((*MockBpfMapAPIs)(nil).GetMapEntry), arg0, arg1, arg2)
}

// GetMapFD mocks base method.
func (m *MockBpfMapAPIs) GetMapFD() uint32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMapFD")
	ret0, _ := ret[0].(uint32)
	return ret0
}

// GetMapFD indicates an expected call of GetMapFD.
func (mr *MockBpfMapAPIsMockRecorder) GetMapFD() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMapFD", reflect.TypeOf((*MockBpfMapAPIs)(nil).GetMapFD))
}

// GetNextMapEntry mocks base method.
func (m *MockBpfMapAPIs) GetNextMapEntry(arg0, arg1 uintptr, arg2 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNextMapEntry", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetNextMapEntry indicates an expected call of GetNextMapEntry.
func (mr *MockBpfMapAPIsMockRecorder) GetNextMapEntry(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNextMapEntry", reflect.TypeOf((*MockBpfMapAPIs)(nil).GetNextMapEntry), arg0, arg1, arg2)
}

// PinMap mocks base method.
func (m *MockBpfMapAPIs) PinMap(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PinMap", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PinMap indicates an expected call of PinMap.
func (mr *MockBpfMapAPIsMockRecorder) PinMap(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PinMap", reflect.TypeOf((*MockBpfMapAPIs)(nil).PinMap), arg0)
}

// UpdateMapEntry mocks base method.
func (m *MockBpfMapAPIs) UpdateMapEntry(arg0, arg1 uintptr, arg2 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMapEntry", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMapEntry indicates an expected call of UpdateMapEntry.
func (mr *MockBpfMapAPIsMockRecorder) UpdateMapEntry(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMapEntry", reflect.TypeOf((*MockBpfMapAPIs)(nil).UpdateMapEntry), arg0, arg1, arg2)
}
